<!DOCTYPE html>
<html>
<head>
  <title>Smart Parking Slot Booking</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
      background: #f7f7f7;
      max-width: 600px;
      margin: auto;
    }

    input, button {
      margin: 10px 0;
      padding: 10px;
      width: 100%;
      max-width: 400px;
      border: 1px solid #ccc;
      border-radius: 5px;
    }

    button {
      background-color: #007bff;
      color: white;
      cursor: pointer;
    }

    button:hover {
      background-color: #0056b3;
    }

    #status {
      margin-top: 30px;
      background: white;
      padding: 15px;
      border-radius: 5px;
      box-shadow: 0 0 5px rgba(0,0,0,0.1);
    }

    h2 {
      color: #333;
    }
  </style>
</head>
<body>

  <h2>üöó Book Your Parking Slot</h2>

  <label for="name">Your Name:</label>
  <input type="text" id="name" placeholder="e.g. Sheila" required>

  <label for="arrival">Arrival Time (Local):</label>
  <input type="datetime-local" id="arrival" required>

  <button onclick="bookSlot()">Book Slot</button>
  <button onclick="cancelSlot()">Cancel Booking</button>

  <div id="status">
    <strong>Slot Info:</strong>
    <div id="slotStatus">Loading...</div>
  </div>

  <script>
    const firebaseURL = "https://smartparkingsystem-55a05-default-rtdb.firebaseio.com/slot1.json";

    async function fetchSlotStatus() {
      try {
        const res = await fetch(firebaseURL);
        const data = await res.json();

        const status = data?.status || "unknown";
        const bookedBy = data?.bookedBy || "";
        const arrivalTime = data?.arrivalTime || "";

        let readableTime = "";
        if (arrivalTime) {
          const dt = new Date(parseInt(arrivalTime) * 1000);
          readableTime = dt.toLocaleString();
        }

        let display = `Slot Status: <strong>${status}</strong>`;
        if (status === "booked") {
          display += `<br>Booked by: <strong>${bookedBy}</strong>`;
          display += `<br>Arrival Time: <strong>${readableTime}</strong>`;
        }

        document.getElementById("slotStatus").innerHTML = display;

      } catch (err) {
        document.getElementById("slotStatus").textContent = "‚ö†Ô∏è Error loading data.";
        console.error("Error fetching slot status:", err);
      }
    }

    async function bookSlot() {
      const name = document.getElementById("name").value.trim();
      const arrival = document.getElementById("arrival").value;

      if (!name || !arrival) {
        alert("Please enter both name and arrival time.");
        return;
      }

      const arrivalUnix = Math.floor(new Date(arrival).getTime() / 1000);

      const bookingData = {
        status: "booked",
        bookedBy: name,
        arrivalTime: arrivalUnix.toString()
      };

      const res = await fetch(firebaseURL, {
        method: "PATCH",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(bookingData)
      });

      if (res.ok) {
        alert("‚úÖ Slot booked successfully!");
        fetchSlotStatus();
      } else {
        alert("‚ùå Booking failed. Try again.");
      }
    }

    async function cancelSlot() {
      const res = await fetch(firebaseURL, {
        method: "PATCH",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          status: "free",
          bookedBy: "",
          arrivalTime: ""
        })
      });

      if (res.ok) {
        alert("üö´ Booking canceled.");
        fetchSlotStatus();
      } else {
        alert("‚ùå Cancellation failed.");
      }
    }

    fetchSlotStatus();
    setInterval(fetchSlotStatus, 5000); // Auto-refresh every 5 seconds
  </script>

</body>
</html>
